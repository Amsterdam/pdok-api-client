# coding: utf-8

# flake8: noqa

"""
    Locatieserver

    De PDOK Locatieserver is een open en gratis geocodeerservice waarmee gezocht kan worden op gegevens uit verschillende overheidsregistraties (bijvoorbeeld adressen, percelen en rijkswegen) om vervolgens doorgestuurd te worden naar de locatie van de zoekopdracht.  De Locatieserver bestaat uit meerdere RESTful API's die eenvoudig geïntegreerd kunnen worden in viewers en/of applicaties. De API's zijn open, gratis en bevatten gegevens uit verschillende overheidsregistraties zoals adressen (postcodes, straten, huisnummer), kadastrale percelen, wegen en hectometerpalen maar ook woonplaatsen, wijken, buurten en waterschappen. De onderliggende gegevens worden zeer frequent bijgewerkt.  De Locatieserver bestaat totaal uit vier RESTful API's die gepubliceerd worden volgens de Open API Specificatie [https://api.pdok.nl/bzk/locatieserver/search/v3_1/ui/](https://api.pdok.nl/bzk/locatieserver/search/v3_1/ui/). Hiermee zijn de mogelijkheden van de Locatieserver API's (input en output) gedocumenteerd.  Het zoeken op gegevens wordt vereenvoudigd met behulp van de **Suggest API** die de mogelijkheid biedt om een (gedeelte van een) zoekopdracht op te voeren, waarnaar er suggesties teruggegeven worden. Dankzij slimme technieken als auto-aanvullen en ondersteuning van alternatieve schrijfwijzen en synoniemen vinden gebruikers snel waar ze naar op zoek zijn. Het is ook mogelijk om bij zoekopdrachten een locatie van de gebruiker mee te geven zodat suggesties op basis van die locatie worden gesorteerd.  Zodra er op basis van suggesties van de Suggest API een keuze is gemaakt, wordt de **Lookup API** aangeroepen, welke o.a. een (versimpelde) geometrie van de zoekopdracht teruggeeft. Hiermee kan een gebruiker naar de locatie van de zoekopdracht worden gestuurd op de kaart. Dankzij de highlight functie kan het betreffende gegeven (object) vervolgens worden opgelicht op de kaart.  De suggest- en de lookup API werken dus als een tweetrapsraket. Er is ook een mogelijkheid om vrij te zoeken (klassiek geocoderen) met de **Free API** waar zonder tussenkomst van suggesties de API direct resultaten teruggeeft op basis van de zoekopdracht.  De **Reverse API** biedt de mogelijkheid om een locatie (punt geometrie) op te geven om vervolgens verschillende gegevens in een range rondom deze locatie te ontvangen. Bijvoorbeeld het ophalen van alle adressen of wegen in de buurt (op basis van de opgegeven locatie). Dit wordt ook wel Reverse Geocoderen genoemd. Met de **Reverse API** kan je op basis van een coördinaat en een range (bijvoorbeeld 1 kilometer) de gewenste gegevens binnen die range opvragen en visualiseren.  De Locatieserver is primair een geocodeerservice. Voor andere doeleinden zoals het rechtstreeks opvragen van bepaalde gegevens of het downloaden van bulk data biedt PDOK andere mogelijkheden via webservices en/of downloads.  Meer informatie over de Locatieserver is ook te vinden op de Locatieserver Wiki op [Github](https://github.com/PDOK/locatieserver/wiki/API-Locatieserver) of volg discussies op het [PDOK forum](https://geoforum.nl/c/applicaties-en-diensten/locatieserver/27). 

    The version of the OpenAPI document: v3_1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# Define package exports
__all__ = [
    "LocatieserverApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "Error",
    "Free200Response",
    "Free400Response",
    "HighlightingValue",
    "Response",
    "Spellcheck",
    "SpellcheckCollationsInner",
    "SpellcheckCollationsInnerOneOf",
    "SpellcheckSuggestionsInner",
    "SpellcheckSuggestionsInnerOneOf",
    "Suggest200Response",
]

# import apis into sdk package
from pdok_api_client.api.locatieserver_api import LocatieserverApi as LocatieserverApi

# import ApiClient
from pdok_api_client.api_response import ApiResponse as ApiResponse
from pdok_api_client.api_client import ApiClient as ApiClient
from pdok_api_client.configuration import Configuration as Configuration
from pdok_api_client.exceptions import OpenApiException as OpenApiException
from pdok_api_client.exceptions import ApiTypeError as ApiTypeError
from pdok_api_client.exceptions import ApiValueError as ApiValueError
from pdok_api_client.exceptions import ApiKeyError as ApiKeyError
from pdok_api_client.exceptions import ApiAttributeError as ApiAttributeError
from pdok_api_client.exceptions import ApiException as ApiException

# import models into sdk package
from pdok_api_client.models.error import Error as Error
from pdok_api_client.models.free200_response import Free200Response as Free200Response
from pdok_api_client.models.free400_response import Free400Response as Free400Response
from pdok_api_client.models.highlighting_value import HighlightingValue as HighlightingValue
from pdok_api_client.models.response import Response as Response
from pdok_api_client.models.spellcheck import Spellcheck as Spellcheck
from pdok_api_client.models.spellcheck_collations_inner import SpellcheckCollationsInner as SpellcheckCollationsInner
from pdok_api_client.models.spellcheck_collations_inner_one_of import SpellcheckCollationsInnerOneOf as SpellcheckCollationsInnerOneOf
from pdok_api_client.models.spellcheck_suggestions_inner import SpellcheckSuggestionsInner as SpellcheckSuggestionsInner
from pdok_api_client.models.spellcheck_suggestions_inner_one_of import SpellcheckSuggestionsInnerOneOf as SpellcheckSuggestionsInnerOneOf
from pdok_api_client.models.suggest200_response import Suggest200Response as Suggest200Response

